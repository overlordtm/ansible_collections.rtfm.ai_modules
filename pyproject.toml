[tool.ruff]
# Ruff configuration for rtfm.ai_modules collection

# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Add other rule sets as needed
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # Pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "PTH",   # flake8-use-pathlib
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
]

# Allow unfixed violations for now during development
ignore = [
    "E501",   # Line too long (handled by formatter)
    "E203",   # Whitespace before ':' (conflicts with black)
    "N806",   # Variable in function should be lowercase (Ansible modules use mixed case)
    "B008",   # Do not perform function calls in argument defaults (common in Ansible)
    "SIM108", # Use ternary operator instead of if-else-block (less readable for complex conditions)
    "SIM117", # nested with-s ignored
    "E402",   # ansible has documentation on top :D
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8+
target-version = "py38"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings.
docstring-code-format = true

[tool.ruff.lint.isort]
# Sort imports
known-first-party = ["rtfm"]
force-single-line = false
lines-between-types = 1

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.mypy]
# MyPy configuration for type checking
python_version = "3.8"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false  # Too strict for Ansible modules
ignore_missing_imports = true
show_error_codes = true

# Ignore specific modules that don't have type hints
[[tool.mypy.overrides]]
module = [
    "ansible.*",
    "google.*",
    "requests.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["tests/unit"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]